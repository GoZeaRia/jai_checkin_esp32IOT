[
    {
        "id": "db78593856e83e05",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": ""
    },
    {
        "id": "5d1f6ffa3b13a881",
        "type": "tab",
        "label": "Flow 2",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "9e86c122701b7e63",
        "type": "mongodb3",
        "uri": "mongodb+srv://jai1:jaiinventors@cluster0.rnjre.mongodb.net/3D_IOT?retryWrites=true&w=majority",
        "name": "3D_IOT",
        "options": "",
        "parallelism": "-1"
    },
    {
        "id": "f52649a9132d5659",
        "type": "blynk-iot-client",
        "name": "B_iot",
        "path": "blynk.cloud",
        "key": "qBGflHpG799KMzSDGLkg94lsuvMXmbj7",
        "tmpl": "TMPLLbTe0s7P",
        "dbg_all": true,
        "dbg_read": false,
        "dbg_prop": false,
        "dbg_sync": false,
        "dbg_low": true,
        "dbg_pins": "",
        "multi_cmd": false,
        "enabled": true
    },
    {
        "id": "9a0e35a68512a2a3",
        "type": "debug",
        "z": "db78593856e83e05",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 570,
        "y": 660,
        "wires": []
    },
    {
        "id": "10ef4d85ed3fcb87",
        "type": "http in",
        "z": "db78593856e83e05",
        "name": "",
        "url": "/device-data",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 700,
        "wires": [
            [
                "c4b41fe36ebc32da",
                "6dfa506d04c27519",
                "9bd5d54a2043a25b"
            ]
        ]
    },
    {
        "id": "c4b41fe36ebc32da",
        "type": "function",
        "z": "db78593856e83e05",
        "name": "",
        "func": "var p = msg.payload;\n\nvar d = new Date(new Date().getTime() + 7 * 3600 * 1000);\n\nmsg.payload ={\"dev_ID\":p.dev,\n            \"temp_C\":parseFloat(p.temp_C),\n            \"temp_F\":parseFloat(p.temp_F),\n            \"heatInd_C\":parseFloat(p.heatInd_C),\n            \"heatInd_F\":parseFloat(p.heatInd_F),\n            \"hum\":parseFloat(p.hum),\n            \"voltage\":parseInt(p.voltage),\n            \"current\":parseFloat(p.current),\n            \"power\":parseInt(p.power),\n            \"energy\":parseFloat(p.energy),\n            \"frequency\":parseInt(p.frequency),\n            \"PF\":parseFloat(p.PF),\n            \"timeStamp\":d,\n            \"count\":parseInt(p.count)\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 660,
        "wires": [
            [
                "9a0e35a68512a2a3"
            ]
        ]
    },
    {
        "id": "1b46e0f581f7f465",
        "type": "mongodb3 in",
        "z": "db78593856e83e05",
        "service": "_ext_",
        "configNode": "9e86c122701b7e63",
        "name": "",
        "collection": "DevData",
        "operation": "insert",
        "x": 610,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "6dfa506d04c27519",
        "type": "function",
        "z": "db78593856e83e05",
        "name": "",
        "func": "\nvar p = msg.payload;\nif(parseInt(p.count) == 1)\n{\n    var d = new Date(new Date().getTime() + 7 * 3600 * 1000);\n\nmsg.payload ={\"dev_ID\":p.dev,\n            \"temp_C\":parseFloat(p.temp_C),\n            \"temp_F\":parseFloat(p.temp_F),\n            \"heatInd_C\":parseFloat(p.heatInd_C),\n            \"heatInd_F\":parseFloat(p.heatInd_F),\n            \"hum\":parseFloat(p.hum),\n            \"voltage\":parseInt(p.voltage),\n            \"current\":parseFloat(p.current),\n            \"power\":parseInt(p.power),\n            \"energy\":parseFloat(p.energy),\n            \"frequency\":parseInt(p.frequency),\n            \"PF\":parseFloat(p.PF),\n            \"timeStamp\":d\n};\nreturn msg;\n}\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 720,
        "wires": [
            [
                "1b46e0f581f7f465"
            ]
        ]
    },
    {
        "id": "91c395cb32eedf10",
        "type": "mongodb3 in",
        "z": "db78593856e83e05",
        "service": "_ext_",
        "configNode": "9e86c122701b7e63",
        "name": "",
        "collection": "RealTime",
        "operation": "update",
        "x": 610,
        "y": 780,
        "wires": [
            []
        ]
    },
    {
        "id": "9bd5d54a2043a25b",
        "type": "function",
        "z": "db78593856e83e05",
        "name": "",
        "func": "var p = msg.payload;\n\nvar d = new Date(new Date().getTime() + 7 * 3600 * 1000);\n\nmsg.payload =[{\"dev_ID\":p.dev},{\"dev_ID\":p.dev,\n            \"temp_C\":parseFloat(p.temp_C),\n            \"temp_F\":parseFloat(p.temp_F),\n            \"heatInd_C\":parseFloat(p.heatInd_C),\n            \"heatInd_F\":parseFloat(p.heatInd_F),\n            \"hum\":parseFloat(p.hum),\n            \"voltage\":parseInt(p.voltage),\n            \"current\":parseFloat(p.current),\n            \"power\":parseInt(p.power),\n            \"energy\":parseFloat(p.energy),\n            \"frequency\":parseInt(p.frequency),\n            \"PF\":parseFloat(p.PF),\n            \"timeStamp\":d,\n            \"count\":parseInt(p.count)\n},{upsert:true} ];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 780,
        "wires": [
            [
                "91c395cb32eedf10",
                "53cf93213ce29183"
            ]
        ]
    },
    {
        "id": "51fddb18962923ec",
        "type": "http response",
        "z": "db78593856e83e05",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 840,
        "y": 1000,
        "wires": []
    },
    {
        "id": "664901addca9310a",
        "type": "http in",
        "z": "db78593856e83e05",
        "name": "",
        "url": "/apipeen/outputByid",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 1000,
        "wires": [
            [
                "77b88d9cbd31bb42"
            ]
        ]
    },
    {
        "id": "77b88d9cbd31bb42",
        "type": "function",
        "z": "db78593856e83e05",
        "name": "",
        "func": "msg.collection=\"OutPut\";\n// msg.payload={dev_ID:\"cadcamthai_PT_meter_1\"};\nvar p =msg.req.body\nmsg.payload={dev_ID:p.dev_ID};\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 1000,
        "wires": [
            [
                "8ab69f5f553387fd"
            ]
        ]
    },
    {
        "id": "8ab69f5f553387fd",
        "type": "mongodb3 in",
        "z": "db78593856e83e05",
        "service": "_ext_",
        "configNode": "9e86c122701b7e63",
        "name": "3D_IOT,OutPut GETBYDEV_ID",
        "collection": "",
        "operation": "find.toArray",
        "x": 630,
        "y": 1000,
        "wires": [
            [
                "51fddb18962923ec"
            ]
        ]
    },
    {
        "id": "2ed7abc9feb094b0",
        "type": "http in",
        "z": "db78593856e83e05",
        "name": "",
        "url": "/apipeen/realTimeIOT",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 940,
        "wires": [
            [
                "0cc83a812cdd15d6"
            ]
        ]
    },
    {
        "id": "0cc83a812cdd15d6",
        "type": "function",
        "z": "db78593856e83e05",
        "name": "",
        "func": "msg.collection=\"RealTime\";\n// msg.payload={dev_ID:\"cadcamthai_PT_meter_1\"};\nvar p =msg.req.body\n// msg.payload={dev_ID:p.dev_ID};\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 940,
        "wires": [
            [
                "be8bb514496fe2ae"
            ]
        ]
    },
    {
        "id": "be8bb514496fe2ae",
        "type": "mongodb3 in",
        "z": "db78593856e83e05",
        "service": "_ext_",
        "configNode": "9e86c122701b7e63",
        "name": "3D_IOT,GET_RealTime",
        "collection": "",
        "operation": "find.toArray",
        "x": 610,
        "y": 940,
        "wires": [
            [
                "166cb45625b6bf4a"
            ]
        ]
    },
    {
        "id": "166cb45625b6bf4a",
        "type": "http response",
        "z": "db78593856e83e05",
        "name": "",
        "statusCode": "200",
        "headers": {
            "Content-Type": "application/json"
        },
        "x": 840,
        "y": 940,
        "wires": []
    },
    {
        "id": "a6d0832531882260",
        "type": "http in",
        "z": "db78593856e83e05",
        "name": "",
        "url": "/apipeen/outputInSertByID",
        "method": "post",
        "upload": true,
        "swaggerDoc": "",
        "x": 130,
        "y": 1060,
        "wires": [
            [
                "c542938df4470c57"
            ]
        ]
    },
    {
        "id": "c542938df4470c57",
        "type": "function",
        "z": "db78593856e83e05",
        "name": "",
        "func": "msg.collection=\"OutPut\";\n// msg.payload={dev_ID:\"cadcamthai_PT_meter_1\"};\nvar tim = new Date(new Date().getTime() + 7 * 3600 * 1000);\nvar p =msg.req.body\nmsg.payload={\"dev_ID\":p.dev_ID,\n            \"_id\":p._id,\n            \"status\":p.status,\n            \"timeStamp\":tim\n};\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 1060,
        "wires": [
            [
                "9f34b34bfb3d20b6"
            ]
        ]
    },
    {
        "id": "9f34b34bfb3d20b6",
        "type": "mongodb3 in",
        "z": "db78593856e83e05",
        "service": "_ext_",
        "configNode": "9e86c122701b7e63",
        "name": "3D_IOT,OutPut create",
        "collection": "",
        "operation": "insert",
        "x": 600,
        "y": 1060,
        "wires": [
            [
                "0f934175109fe1fe"
            ]
        ]
    },
    {
        "id": "0f934175109fe1fe",
        "type": "http response",
        "z": "db78593856e83e05",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 840,
        "y": 1060,
        "wires": []
    },
    {
        "id": "e58d41e624437c74",
        "type": "http in",
        "z": "db78593856e83e05",
        "name": "",
        "url": "/apipeen/outputUpdateByID",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 1120,
        "wires": [
            [
                "41611e58403278c5"
            ]
        ]
    },
    {
        "id": "41611e58403278c5",
        "type": "function",
        "z": "db78593856e83e05",
        "name": "",
        "func": "// msg.collection=\"OutPut\";\n// msg.payload={dev_ID:\"cadcamthai_PT_meter_1\"};\nvar tim = new Date(new Date().getTime() + 7 * 3600 * 1000);\nvar p =msg.req.body\n\nmsg.payload =[{\"dev_ID\":p.dev_ID},{ \"dev_ID\":p.dev_ID,\n                                    \"relay1\":p.relay1,\n                                    \"relay2\":p.relay2,\n                                    \"timeStamp\":tim,\n},{upsert:true} ];\n\nreturn msg;\n\n// return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 1120,
        "wires": [
            [
                "0f78257c8e231201"
            ]
        ]
    },
    {
        "id": "0f78257c8e231201",
        "type": "mongodb3 in",
        "z": "db78593856e83e05",
        "service": "_ext_",
        "configNode": "9e86c122701b7e63",
        "name": "3D_IOT,OutPut Update",
        "collection": "OutPut",
        "operation": "update",
        "x": 610,
        "y": 1120,
        "wires": [
            [
                "f4ecb9dde67f702d"
            ]
        ]
    },
    {
        "id": "819a8753612bbdf5",
        "type": "http in",
        "z": "db78593856e83e05",
        "name": "",
        "url": "/apipeen/outputall",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 100,
        "y": 880,
        "wires": [
            [
                "63971bc832a00e62"
            ]
        ]
    },
    {
        "id": "63971bc832a00e62",
        "type": "function",
        "z": "db78593856e83e05",
        "name": "",
        "func": "msg.collection=\"OutPut\";\n// msg.payload={dev_ID:\"cadcamthai_PT_meter_1\"};\n\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 880,
        "wires": [
            [
                "6a16002fc1db0897"
            ]
        ]
    },
    {
        "id": "6a16002fc1db0897",
        "type": "mongodb3 in",
        "z": "db78593856e83e05",
        "service": "_ext_",
        "configNode": "9e86c122701b7e63",
        "name": "3D_IOT,GetAllOutPut",
        "collection": "",
        "operation": "find.toArray",
        "x": 600,
        "y": 880,
        "wires": [
            [
                "3116d94144c2641b"
            ]
        ]
    },
    {
        "id": "3116d94144c2641b",
        "type": "http response",
        "z": "db78593856e83e05",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 840,
        "y": 880,
        "wires": []
    },
    {
        "id": "f4ecb9dde67f702d",
        "type": "http response",
        "z": "db78593856e83e05",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 840,
        "y": 1120,
        "wires": []
    },
    {
        "id": "3bb37e85b131819b",
        "type": "mongodb3 in",
        "z": "db78593856e83e05",
        "service": "_ext_",
        "configNode": "9e86c122701b7e63",
        "name": "",
        "collection": "DevData",
        "operation": "find.toArray",
        "x": 620,
        "y": 1180,
        "wires": [
            [
                "6ca8b84d83fd9b8d"
            ]
        ]
    },
    {
        "id": "832ecae1d9c03c15",
        "type": "function",
        "z": "db78593856e83e05",
        "name": "",
        "func": "// msg.collection=\"OutPut\";\n// msg.payload={dev_ID:\"cadcamthai_PT_meter_1\"};\n\nvar p =msg.req.body\n\nmsg.payload={dev_ID:p.dev_ID};\n\nreturn msg;\n\n// return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 1180,
        "wires": [
            [
                "3bb37e85b131819b"
            ]
        ]
    },
    {
        "id": "c71e210764ce59c7",
        "type": "http in",
        "z": "db78593856e83e05",
        "name": "",
        "url": "/apipeen/devdataByid",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 1180,
        "wires": [
            [
                "832ecae1d9c03c15"
            ]
        ]
    },
    {
        "id": "6ca8b84d83fd9b8d",
        "type": "http response",
        "z": "db78593856e83e05",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 840,
        "y": 1180,
        "wires": []
    },
    {
        "id": "53cf93213ce29183",
        "type": "debug",
        "z": "db78593856e83e05",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 570,
        "y": 840,
        "wires": []
    },
    {
        "id": "3b19cb8f92b6662c",
        "type": "inject",
        "z": "db78593856e83e05",
        "name": "",
        "props": [
            {
                "p": "topic",
                "v": "{ \"dev_ID\": \"device_ch2_03\",\"relay1\":\"1\",  \"relay2\":\"\"}",
                "vt": "json"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 70,
        "y": 1300,
        "wires": [
            [
                "5285f1d734e3ae45"
            ]
        ]
    },
    {
        "id": "5285f1d734e3ae45",
        "type": "http request",
        "z": "db78593856e83e05",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://34.133.167.107:1880/apipeen/outputUpdateByID_name",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 270,
        "y": 1300,
        "wires": [
            []
        ]
    },
    {
        "id": "a5f0e8d6dd013858",
        "type": "http in",
        "z": "db78593856e83e05",
        "name": "[POST]/apipeen/outputUpdateByID_name",
        "url": "/apipeen/outputUpdateByID_name",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 160,
        "y": 1240,
        "wires": [
            [
                "830d5ab20284dfa0"
            ]
        ]
    },
    {
        "id": "830d5ab20284dfa0",
        "type": "function",
        "z": "db78593856e83e05",
        "name": "",
        "func": "// msg.collection=\"OutPut\";\n// msg.payload={dev_ID:\"cadcamthai_PT_meter_1\"};\n\nvar p =msg.req.body\n// var Cin_format = {\n//     \"dev_ID\": \"\",\n//     \"relay1_name\": null,\n//     \"relay2_name\": null,\n// }\n\nif (p.relay1_name && p.relay1_name != \"\"){\n    \n    msg.payload = [\n        {\n            \"dev_ID\": p.dev_ID\n        },\n        {\n            $set: {\n                \"relay1_name\": p.relay1_name\n                    }         \n        }, \n        { upsert: true }\n        ]\n\n\n}\nelse if (p.relay2_name && p.relay2_name !=\"\"){\n    msg.payload = [\n        {\n            \"dev_ID\": p.dev_ID\n        },\n        {\n            $set: {\n                \"relay2_name\": p.relay2_name\n                  }\n        }, \n        { upsert: true }\n\n        ]\n}\n\n\n\n\nnode.warn(msg.payload)\n\n\nreturn msg;\n\n// return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 1240,
        "wires": [
            [
                "f46daa707b4a7082"
            ]
        ]
    },
    {
        "id": "f46daa707b4a7082",
        "type": "mongodb3 in",
        "z": "db78593856e83e05",
        "service": "_ext_",
        "configNode": "9e86c122701b7e63",
        "name": "",
        "collection": "OutPut",
        "operation": "update",
        "x": 600,
        "y": 1240,
        "wires": [
            [
                "ba516fa3e0e5edaa"
            ]
        ]
    },
    {
        "id": "ba516fa3e0e5edaa",
        "type": "http response",
        "z": "db78593856e83e05",
        "name": "",
        "statusCode": "200",
        "headers": {
            "status_code": "200"
        },
        "x": 840,
        "y": 1240,
        "wires": []
    },
    {
        "id": "bced11b728430434",
        "type": "http in",
        "z": "5d1f6ffa3b13a881",
        "name": "[POST]/jai_check_in",
        "url": "/jai_check_in",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 320,
        "wires": [
            [
                "b93347f9571261c7"
            ]
        ]
    },
    {
        "id": "254335457951b1c9",
        "type": "http request",
        "z": "5d1f6ffa3b13a881",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://script.google.com/macros/s/AKfycbyR3W0bkg4YezIQCanuzvyAvKxVFW2xrDXq3SJ0Uhdsc75dPxPfyP_ql1fCwYCD96iMGA/exec?action=getUsers",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 490,
        "y": 320,
        "wires": [
            [
                "a4d4ab524d520294"
            ]
        ]
    },
    {
        "id": "b93347f9571261c7",
        "type": "function",
        "z": "5d1f6ffa3b13a881",
        "name": "function 2",
        "func": "var p = msg.payload\n\nconst d = new Date().toLocaleString('en-US', { timeZone: 'Asia/Bangkok' });\n\n\nconst convertTime12to24 = (time12h) => {\n    const [time, modifier] = time12h.split(' ');\n\n    let [hours, minutes] = time.split(':');\n\n    if (hours === '12') {\n        hours = '00';\n    }\n\n    if (modifier === 'PM') {\n        hours = parseInt(hours, 10) + 12;\n    }\n\n    return `${hours}:${minutes}`;\n}\n\n\nvar time = d.split(\",\")[1]\nvar ts = time.split(\":\")[0] +\":\"+ time.split(\":\")[1] +\" \"+time.split(\":\")[2].split(' ')[1]\nvar ts_sec = time.split(\":\")[2].split(' ')[0]\nvar date = d.split(\",\")[0]\n\nvar mm = date.split(\"/\")[0]\nvar dd = date.split(\"/\")[1]\nvar yyyy = date.split(\"/\")[2]\n\n\n\nvar newts = space_del(ts) \n\n\nvar format_time = dd + \"/\" + mm + \"/\" + yyyy + \",\" + convertTime12to24(newts) + \":\" + ts_sec\n\n// node.warn(d); //   \"12/13/2022, 12:40:32 PM\"\n\n// node.warn(date); //\"12/13/2022\"\n// node.warn(dd);  //\"xx\"\n// node.warn(mm);  //\"xxxx\"\n// node.warn(yyyy); //\"xxxx\"\n\n\n// node.warn(time); // \" 12:25:01 PM\"\n// node.warn(ts); // \" 12:25 PM\" \n// node.warn(newts); //\"12:25 PM\" .shift() space\n// node.warn(ts_sec); // \"xx\"\n\n// node.warn(convertTime12to24(newts)); //\"12:25\"\n// node.warn(format_time); //\"12:25\"\n\nif(p.check==\"check_in\"){\n    msg.payload1 = {\n        \"timestamps\": format_time,\n        \"JAI_STAFF_NAME\": \"\",\n        \"Special_Check_IN\": \"\",\n        \"Noted\": \"\",\n        \"barcode_ID\": p.barcode_ID,\n        \"check\": \"check_in\"\n    }\n} else if (p.check == \"check_out\"){\n    msg.payload1 = {\n        \"timestamps\": format_time,\n        \"JAI_STAFF_NAME\": \"\",\n        \"Special_Check_OUT\": \"\",\n        \"Noted\": \"\",\n        \"barcode_ID\": p.barcode_ID,\n        \"check\":\"check_out\"\n    }\n}\n \n// node.warn(msg.payload);\n// node.warn(msg.payload1);\ndelete msg.payload;\n\nreturn msg;\n\n\n\n\nfunction space_del(ts) {\n    let newts =\"\"\n    for (let i = 0; i < ts.length; i++) {\n       \n        if (ts.charAt(i) == \" \" && i==0){\n\n        }else{\n\n            newts += ts.charAt(i)\n        }\n    }\n    // node.warn(newts);\n    return newts\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 320,
        "wires": [
            [
                "254335457951b1c9"
            ]
        ]
    },
    {
        "id": "3c321855ae8fd947",
        "type": "http response",
        "z": "5d1f6ffa3b13a881",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1210,
        "y": 320,
        "wires": []
    },
    {
        "id": "42cb49201771bcf0",
        "type": "function",
        "z": "5d1f6ffa3b13a881",
        "name": "function 3",
        "func": "\n \n \nvar scan = msg.payload1\nvar getdata = msg.payload\n\n// node.warn(scan);\n// node.warn(getdata);\n\n\nvar barcode_ID =  scan.barcode_ID ;\n// node.warn(barcode_ID);\n\nvar jai_staff  \n\ngetdata.forEach(function(element) {\n    if (element.barcodeID == barcode_ID)   {\n        // node.warn(element.JAI_STAFF_NAME);\n        // jai_staff = element\n        scan.JAI_STAFF_NAME = element.JAI_STAFF_NAME\n    }\n});\n\n// node.warn(scan);\n\nmsg.payload= scan\nmsg.headers['content-type'] = 'application/json';\nmsg.apiRes = scan.JAI_STAFF_NAME+\" : \"+ \"checkin success :\"+\" \"+scan.timestamps\n\nif (scan.check ==\"check_in\"){\n    msg.url = \"https://script.google.com/macros/s/AKfycbz9BwfWuZiN7phNVcsH7GWngzZlXAWA5X3j4ywBAOq36lRg72a03BDVIme4lfKnB6XkYg/exec?action=addData\"\n\n} else if (scan.check == \"check_out\"){\n    msg.url = \"https://script.google.com/macros/s/AKfycbwIf_7k_vAwPflAfVTGmnImHGAr9XugockdQ5ymBnHRO51xJU5TymQhkdvgvzWQL6Q-fg/exec?action=addData\"\n}\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 320,
        "wires": [
            [
                "fa715fd409d0cbf9"
            ]
        ]
    },
    {
        "id": "a4d4ab524d520294",
        "type": "json",
        "z": "5d1f6ffa3b13a881",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 630,
        "y": 320,
        "wires": [
            [
                "42cb49201771bcf0"
            ]
        ]
    },
    {
        "id": "fa715fd409d0cbf9",
        "type": "http request",
        "z": "5d1f6ffa3b13a881",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 910,
        "y": 320,
        "wires": [
            [
                "dda749cbfaf4b85f"
            ]
        ]
    },
    {
        "id": "dda749cbfaf4b85f",
        "type": "function",
        "z": "5d1f6ffa3b13a881",
        "name": "function 4",
        "func": "\nnode.warn(msg);\n \nvar payload = msg.payload1\n// msg.apiRes = scan.JAI_STAFF_NAME+\" : \"+ \"checkin success :\"+\" \"+scan.timestamps\n\nmsg.payload = \"200\"\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 320,
        "wires": [
            [
                "3c321855ae8fd947"
            ]
        ]
    },
    {
        "id": "e77e1b70126a7013",
        "type": "http in",
        "z": "5d1f6ffa3b13a881",
        "name": "[POST]/jai_check_out",
        "url": "/jai_check_out",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 100,
        "y": 380,
        "wires": [
            [
                "b93347f9571261c7"
            ]
        ]
    }
]